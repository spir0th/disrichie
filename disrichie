#!/bin/python
# Launcher script for disrichie
import os
import sys
from sys import exit

cwd = os.path.dirname(os.path.abspath(__file__))
script_dir: str = f"{cwd}/scripts"
script_main: str = f"{script_dir}/main.py"

class PyVersionUnsupportedError(Exception):
	def __init__(self, version: str):
		super().__init__(f"Disrichie does not support Python {version} or less.")

class PyInteractiveError(Exception):
	def __init__(self):
		super().__init__('Do not run Disrichie inside an interactive Python instance!')

class DisrichieMainError(Exception):
	def __init__(self):
		super().__init__('Initialization error')

def handle_launcher_args():
	if '--tracebacks' not in sys.argv: sys.tracebacklimit = 0
	if '--cache' not in sys.argv: sys.dont_write_bytecode = True
	if '-v' in sys.argv or '--version' in sys.argv:
		print('version 1.0.3')
		exit()
	if '-h' in sys.argv or '--help' in sys.argv:
		print('disrichie - A simple program to display custom Rich Presence on Discord!')
		print('\nArguments:')
		print('	-i / --id : Client ID to be used for this Rich Presence')
		print('	--cancel : Closes the locked Disrichie instance')
		print('	--wait : Do not put Disrichie into background and wait')
		print('\nRich Presence arguments:')
		print('	-d / --details : Used to display below the Rich Presence name')
		print('	-s / --state : Used to display below the details')
		print('	--elapsed : Shows the elapsed time if set')
		print('	--large-image-key : Shows the big image from the client ID')
		print('	--small-image-key : Shows the small image from the client ID')
		print('	--large-image-text : Displayed when the big image is hovered')
		print('	--small-image-key : Displayed when the small image is hovered')
		print('\nLauncher arguments:')
		print('	-h / --help : Display help information')
		print('	-v / --version : Print program version')
		print('	--cache : Enable caching for this instance')
		print('	--tracebacks : Print not only the error but from where it was fired')
		exit()

def check_interactive():
	try:
		__file__
	except NameError:
		raise PyInteractiveError()

def check_py_version():
	if sys.version_info[1] < 7:
		raise PyVersionUnsupportedError('3.6.15')

def launch():
	try:
		from main import Disrichie
		instance = Disrichie(sys.argv[1:])
		instance.start()
	except ModuleNotFoundError:
		raise DisrichieMainError()

# Main code
check_interactive()
check_py_version()
handle_launcher_args()
sys.path.insert(0, script_dir)
launch()